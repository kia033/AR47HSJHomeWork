
#include <iostream>

// 함수의 선언방법
// 1.함수는 다른 함수 내부에서는 선언하지 못하게 문법상 정의되어 있습니다.
// 2.함수는 리턴값이라는 것이 무조건 존재합니다.
// 3.
//

// 리턴값	이름		인자
	void	Function	(		)
	{ // 함수의 시작




	} // 함수의 끝


// 함수는 만들수록 속도가 느려진다

// 리턴값의 의미
// 이 함수의 결과를 외부로 보내겠다.
// void 는 아무것도 보내지 않겠다.

// 이름의 의미.
// 변수와 똑같이 함수도 그에 대한 내용이 있고 
// 메모리를 써서 그것을 표현하고 있다.
// 메모리가 존재한다면 그에 대한 위치도 무조건 필요하다.
// 이름은 그 위치를 의미하게 된다.

// 인자의 의미
// 무조건 적으로 그 실행흐름의 지역변수입니다.
// 
// 리턴의 의미 
// 자신을 호출한 외부 영역에 전달하는 메모리값
// + 사용한 즉시 자신을 포함한 실행흐름을 끝낸다.
int Plus(int _Left, int _Right)
{
	return _Left + _Right;
}


// 이름이 같은 변수는 선언할 수 없다.
// 함수를 실행하는데 필요한 메모리 비용은 언제나
// 인자 전체 크기 + a
void Test(int _Value)
{
	// _Value = 10; 
	// 이 실행흐름 안에선 인자값을 수정해도 
	// 실행 흐름 밖에선 아무런 영향이 없다.
	return;
}

int main()
{

	//  4바이트 사용
	// Plus(20,30);

	int Result = Plus(20, 30);

	sizeof(Plus(20, 30));

	// sizeof(Test(_Value));
	// 
	// void는 sizeof 할 수 없다.
	// sizeof(void);


}

